<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US">
<head profile="http://gmpg.org/xfn/11">
  <title>Tracks / Linux Plumbers Conf: Developing the Kernel, Libraries and Utilities / September 23-25, 09 / Portland, OR</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <meta name="description" content="Developing the Kernel, Libraries and Utilities / September 23-25, 09 / Portland, OR" />

  <!-- Feeds -->
  <link href="../../proposals.atom" rel="alternate" title="Linux Plumbers Conf: Proposals feed" type="application/atom+xml" />
  

  <!-- Stylesheets -->
  
    <link href="../../../2009/style/style.css" media="screen" rel="stylesheet" type="text/css" />
  
  <link href="../../themes/lpc/stylesheets/custom.css?1257250074" media="screen" rel="Stylesheet" type="text/css" />
  

  <!-- Dynamic styles -->
  
    
      <style type="text/css" media="screen">
        
  /* Audio */
  .track-1 { color: #04207c; }
  .track-1.block { background: #04207c; color: #fff; }
  .track-1.light { background: #0633c6; }
  .track-1.light:hover { background: #062dae; }

  /* BoF */
  .track-14 { color: #1f0de7; }
  .track-14.block { background: #1f0de7; color: #fff; }
  .track-14.light { background: #978ef9; }
  .track-14.light:hover { background: #6c60f6; }

  /* Boot and Init */
  .track-12 { color: #8b9dcb; }
  .track-12.block { background: #8b9dcb; color: #fff; }
  .track-12.light { background: #ffffff; }
  .track-12.light:hover { background: #e9edf5; }

  /* Embedded Systems */
  .track-4 { color: #2dc125; }
  .track-4.block { background: #2dc125; color: #fff; }
  .track-4.light { background: #8de888; }
  .track-4.light:hover { background: #68e161; }

  /* General */
  .track-8 { color: #c97a18; }
  .track-8.block { background: #c97a18; color: #fff; }
  .track-8.light { background: #efba79; }
  .track-8.light:hover { background: #eaa651; }

  /* Inter-Distribution Cooperation */
  .track-9 { color: #d93ab8; }
  .track-9.block { background: #d93ab8; color: #fff; }
  .track-9.light { background: #f4c4ea; }
  .track-9.light:hover { background: #eb96d9; }

  /* Kernel/Userspace/User  Interfaces */
  .track-11 { color: #2a5534; }
  .track-11.block { background: #2a5534; color: #fff; }
  .track-11.light { background: #438853; }
  .track-11.light:hover { background: #3b7749; }

  /* Networking */
  .track-6 { color: #298960; }
  .track-6.block { background: #298960; color: #fff; }
  .track-6.light { background: #52cb97; }
  .track-6.light:hover { background: #39c086; }

  /* Real Time */
  .track-13 { color: #404139; }
  .track-13.block { background: #404139; color: #fff; }
  .track-13.light { background: #66685b; }
  .track-13.light:hover { background: #5a5b50; }

  /* Security */
  .track-2 { color: #eb2d2d; }
  .track-2.block { background: #eb2d2d; color: #fff; }
  .track-2.light { background: #fac6c6; }
  .track-2.light:hover { background: #f59393; }

  /* Storage */
  .track-7 { color: #bebbce; }
  .track-7.block { background: #bebbce; color: #fff; }
  .track-7.light { background: #ffffff; }
  .track-7.light:hover { background: #ffffff; }

  /* X Window System */
  .track-3 { color: #d253df; }
  .track-3.block { background: #d253df; color: #fff; }
  .track-3.light { background: #fbeefc; }
  .track-3.light:hover { background: #edbaf2; }

      </style>
    
  

  <!-- Scripts -->
  <script src="../../javascripts/jquery.min.js" type="text/javascript"></script>
  <script src="../../javascripts/jquery-ui.effects.core.js" type="text/javascript"></script>
  <script src="../../javascripts/jquery-ui.effects.highlight.js" type="text/javascript"></script>
  <script src="../../javascripts/application.js" type="text/javascript"></script>
  
    
    
  <script type="text/javascript" charset="utf-8">
    $(document).ready(function() {
      app.current_user = false;
      app.authenticity_token = '3de1ad592bd7309acf8c34d1703480c88bfb9b22';
    });
  </script>
</head>



<body>
  <div id="wrapper">
     <div id="header">
           <h1 id="site-title"><span><a href="../../../2009/index.html" title="Linux Plumbers Conf 2009" rel="home">Linux Plumbers Conf 2009</a></span></h1>
           <div id="site-description">Developing the Kernel, Libraries and Utilities</div>
      </div>

      <div id="access">
        <div class="skip-link">
          <a href="tracks.1#content" title="Skip to content">Skip to content</a>
        </div>

        <div id="menu">
          <ul>
            <li><a href="../../../2009/index.html" />Blog</a></li>
            <li class="page_item page-item"><a href="../../../2009/attend/index.html" title="Attend">Attend</a></li>
            <li class="page_item page-item"><a href="../../../2009/schedule/index.html" title="Schedule">Schedule</a></li>
            <li class="page_item page-item"><a href="../../../2009/program/index.html" title="Program">Program</a></li>
            <li class="page_item page-item"><a href="../../../2009/contact/index.html" title="Contact">Contact</a></li>
            <li class="page_item page-item"><a href="../../../2009/faqs/index.html" title="FAQs">FAQs</a></li>
          </ul>
        </div>

      </div>

      <div id="container">
        <div id="content">
          <h2 class='entry-title'>Proposals</h2>
          

          <h2 class='page_title'>Tracks</h2>

          <!-- Display notices -->
          
          
          
          

          <!-- Display view's content -->
          


<div class="tracks_text">
  <p></p>
  
</div>


  <h3 class='track block track-1'><a href="tracks/1">Audio</a></h3>
  <span class="description"><p>First-time Linux users have sometimes been heard to complain that Linux&#8217;s audio system can be a bit troublesome.  Given that these users can be less than understanding when they fail to get sound out of their system, it is good that Linux audio has been getting more attention.  Lennart Poettering, who leads the PulseAudio project and who got his start back with the Linux 2.0.30 kernel, has pulled together an excellent microconference on the Linux audio system, past, present, and future.</p>
<p>The first topic is the ghost of Linux audio past, in the form of &#8220;Origins and Futures for Linux Audio Infrastructure&#8221;, by Paul Davis.  Paul will discuss how Linux&#8217;s audio environment got to where it is, and how the limited conception of &#8220;audio on a computer&#8221; by some of the early projects resulted in the current wide variety of Linux audio systems, including <span class="caps">OSS</span>, <span class="caps">ALSA</span>, <span class="caps">JACK</span>, and PulseAudio.  He will also offer up discussion as to whether the underlying problem is technical or political.</p>
<p>Lennart himself will deal with the ghost of Linux audio present with &#8220;State of Linux Audio in 2009&#8221;, and then hand off to the ghost of Linux Audio future, in the form of &#8220;Linux Audio for Mobile and Consumer Devices: Challenges and Evolutions&#8221; by Pierre-Louis Bossart.  Pierre discusses the challenges of enabling hardware accelerators for energy conservation or for <span class="caps">DRM</span>-protected content.  This is expected to require PulseAudio to control not only native streams in the <span class="caps">CPU</span>, but also hardware-mixed streams, while still giving the user full control.  This will lead to the need for audio policies, to be set by <span class="caps">OEM</span> or distribution maintainers.  The final gaze into the crystal ball involves the latencies of audio and video rendering, the discussion of which is hoped to generate ideas on lip-sync and on receiver adaptation.</p>
<p>If Linux ran only on desktops, laptops, notebooks, and servers, this might be the end of the story.  But Linux is not to be so constrained, and we therefore have the ghost of audio handheld, in the form of &#8220;Practical Experiences from Using PulseAudio in Embedded Handheld Devices&#8221; by Jyri Sarha.  Jyri will discuss integration of complex audio-enhancement algorithms such as acoustic echo cancellation to PulseAudio, as well as implementation of low-latency audio applications as PulseAudio modules.</p>
<p>With your help, we can further improve the state of Linux Audio!</p></span>
  
  

  <h3 class='track block track-12'><a href="tracks/12">Boot and Init</a></h3>
  <span class="description"><p>Whether you work on utilities, libraries, compiler, or kernel, seeing the login prompt is a key milestone. This is especially the case when making a change that affects the boot-time operation of multiple components. Boot-time and initialization issues are therefore an important topic for the Linux Plumbers Conference.</p>
<p>We are fortunate to have Dave Jones, codemonkey extraordinaire, and one of the forces behind the Fedora projects, and author of &#8220;Why Userspace Sucks&#8221; running the &#8220;Boot and Init&#8221; microconference. Dave has come through for us, selecting an important set of topics.</p>
<p>Dave&#8217;s first selection is &#8220;Lazy Boot&#8221; by Kyle McMartin. Kyle asks some forehead-slappingly important questions about the boot process, including &#8220;why do we need to load sound drivers before we have a filesystem mounted read-write?&#8221;, &#8220;why do we need <span class="caps">CUPS</span> running without any printers attached?&#8221;, and &#8220;if if you do have a printer, why do you need it before your network is up?&#8221; In general, &#8220;when is the appropriate time to start system services?&#8221; With some luck, this line of reasoning will result in further decreases in Linux&#8217;s boot time.</p>
<p>Dave&#8217;s second selection is &#8220;Upstart 1.0&#8221; by Scott James Remnant. Upstart is an event-driven replacement for the long-in-tooth System-V init utility that makes use of Linux innovations, including D-Bus. Among Upstart&#8217;s many features is the ability to respawn services that die unexpectedly, which should provide an even greater level of resilience to the Linux experience.</p>
<p>Dave&#8217;s final selection is &#8220;Dracut &#8212; A Generic &#8216;initramfs&#8217; Infrastructure&#8221; by Harald Hoyer. Traditional experiences with debugging and improving the initramfs process have been less than pleasant, which has motivated Harald to develop a modular event-driven initramfs process that works seamlessly across distros. Dracut promises to ease changes to Linux&#8217;s boot and initialization.</p></span>
  
  

  <h3 class='track block track-4'><a href="tracks/4">Embedded Systems</a></h3>
  <span class="description"><p>Some would say that Linux has been successful in the embedded space in spite of itself, as there has been relatively little communication between the embedded Linux community and the larger Linux community. Although this has been changing over the past few years, continued progress would be beneficial.</p>
<p>Given his success in bringing many device manufacturers into the Linux community, we can think of no one better than Greg Kroah-Hartman to lead up Linux Plumber Conference&#8217;s Embedded microconference. Greg has duly assembled a very impressive lineup.</p>
<p>Greg starts with a real live embedded-Linux developer, Mike Rapoport, who will present &#8220;Embedded Linux Development: a Glance From Inside.&#8221; Mike works for a small embedded company, so is in a good position to describe the process of embedded-device development and the constraints that this process imposes on embedded developers. He will use this information to analyze the reasons for the relatively low number of contributions to the Linux kernel from the embedded community.</p>
<p>Greg then moves to a real embedded project with &#8220;Lessons Learned Designing an Open Source <span class="caps">UMPC</span>&#8221; by Ben Goska, Tim Harder, and Carlos Jensen. This project produced both the hardware and software for an ultra-mobile personal computer (<span class="caps">UMPC</span>) named <span class="caps">OSWALD</span> (for Oregon State Wireless Active Learning Device). The purpose of <span class="caps">OSWALD</span> is to encourage students to learn about every aspect of computing by permitting experimentation at any level from hardware through firmware and kernel to applications. Every aspect of <span class="caps">OSWALD</span> is therefore open, from the hardware to the applications. This presentation gives a quick overview of OSWALD&#8217;s architecture and the challenges faced in bringing it to reality.</p>
<p>Greg&#8217;s next topic is a real hardware problem that is affecting even embedded systems, &#8220;Asymmetric Multiprocessing Issues&#8221; by Hollis Blanchard. Yes, multicore CPUs have arrived even in the embedded arena. But embedded system designers want to take things one step further, creating asymmetric systems that run multiple instances of Linux with different capabilities (e.g., real-time and not) on a multicore system. However, such systems do not always have the hardware virtualization capabilities, so these Linux instances must cooperate, leaving hardware resources for each other and sharing hardware as needed. Hollis describes how to use existing solutions to make these systems a reality.</p>
<p>Greg&#8217;s final topic is a proposed solution for a real problem, &#8220;Flattened Device Tree for All Architectures&#8221;, by Grant Likely. This proposal provides the benefits of OpenFirmware&#8217;s device tree to PowerPC systems that do not provide OpenFirmware. This approach has also been used for some systems in other architectures, including Microblaze, <span class="caps">ARM</span>, and <span class="caps">MIPS</span>. Grant will propose this flattened device tree for other architectures in order to consolidate code and ease porting Linux to new architectures.</p></span>
  
  

  <h3 class='track block track-8'><a href="tracks/8">General</a></h3>
  <span class="description"><p>General Track will include miscellaneous talks that do not fall into one of the other tracks.</p></span>
  
  

  <h3 class='track block track-9'><a href="tracks/9">Inter-Distribution Cooperation</a></h3>
  <span class="description"><p>(Dropped, to be deleted)</p></span>
  
  

  <h3 class='track block track-11'><a href="tracks/11">Kernel/Userspace/User  Interfaces</a></h3>
  <span class="description"><p>One of the biggest secrets of FOSS&#8217;s success is a well-crafted set of interfaces amongst the various components. Although famously not set in stone, these interfaces permit different <span class="caps">FOSS</span> projects to work for the most part separately, while still coming together as a coherent system. Such interfaces are clearly a key topic for the Linux Plumbers Conference.</p>
<p>Therefore, we are happy to announce that Jim Gettys, one of the original developers of the X Window System, past VP of Software at <span class="caps">OLPC</span>, now at Alcatel-Lucent Bell Labs, has selected a great lineup from a set of excellent submissions to the &#8220;Kernel/Userspace/User Interfaces&#8221; microconference.</p>
<p>Jim&#8217;s first selection is &#8220;<span class="caps">USB</span> 3.0 for Linux&#8221; by Sarah Sharp. Thanks to Sarah, Linux is the first kernel to offer <span class="caps">USB</span> 3.0 support, adding yet another counter-example to the myth that Linux is late in supporting new devices. <span class="caps">USB</span> 3.0 promises high speed (5Gbps) and flexible power management (go green!), but being new, is still in development. This portion of the microconference will give an overview of <span class="caps">USB</span> 3.0 and provide a forum for discussing the inevitable <span class="caps">USB</span> 3.0 development issues.</p>
<p>Green computing is also key to Jim&#8217;s second selection, &#8220;Power management: Communicating needs and desires&#8221; by Matthew Garrett. This portion of the microconference looks to raise the current power-management discussion beyond static policies to a more dynamic level that automatically takes the needs of userspace applications into account. Given that existing interfaces are not believed to be sufficient to support this sort of dynamic power management, we can expect a lively discussion.</p>
<p>Jim&#8217;s final selection is &#8220;Checkpoint/Restart in Linux mainline&#8221; by Sukadev Bhattiprolu. Checkpoint/restart is the ability to save the state of a running application, then resume it later on a similar system. There are at least two out-of-tree checkpoint/restart implementations (Zap and OpenVZ), but the potential complexities of a full solution have deterred mainlining. Such complexities include network connections, graphical user interfaces, timed events, response-time constraints, and much more besides. So, if history is any guide, this discussion should generate significant excitement, and hopefully also creative solutions, restrictions, or reframings of the problems.</p></span>
  
  

  <h3 class='track block track-6'><a href="tracks/6">Networking</a></h3>
  <span class="description"><p>Networking is the key plumbing component that connects users and services to the world. Even in the embedded world, connectivity is critically important. Therefore a new microconf has been added to Linux Plumbers Conference to cover hot topics in Networking.</p>
<p>Most people familiar with the Linux will recognize Stephen Hemminger as one of the key current developers of Linux networking.  He has made many important contributions to many components of Linux&#8217;s networking stack for several  years.  We are fortunate that he has graciously agreed to run the Networking micro-conference.</p>
<p>The opening part of the session deals with the interfaces to some of the core components of the networking stack. Obviously, if everything was working perfectly, there would be no need for a conference; therefore the two API&#8217;s under discussion are both important but incomplete.</p>
<p>The first topic is the wireless networking <span class="caps">API</span>. Linux is now undergoing a renaissance in wireless development. After going through the dark ages with many hardware devices not supported, and competing 802.11 protocol stacks; developers and companies are now focusing on delivering a complete and compatible solution. The first speaker John Linville is the current wireless networking maintainer and his talk &#8220;Modern Configuration <span class="caps">API</span> for Wireless Networking&#8221; covers the maturing cfg80211 <span class="caps">API</span> that is replacing the classical, outdated and scorned wireless extensions interface.  Fully adopting cfg80211 will require coordinated changes to both the kernel and user utilities, which we hope that Plumbers can help with.</p>
<p>The second <span class="caps">API</span>-related talk covers network namespaces, a developing technology which provides controlled views of the networking environment to containerized processes.  Projects like OpenVZ have use network namespaces for some time, but getting this technology into the mainline kernel has been a multi-year process which is still ongoing. Like other virtual environments, network namespaces bring their own communications challenges. The talk, &#8220;Why Network Namespace Sucks and How to Make it Suck Faster&#8221;, by Pavel Emelyanov will deal with some of these issues.  It turns out that the Linux kernel has no fewer than five network device types that can be used as packet sources, with a sixth residing in the OpenVZ project.  Pavel will compare and contrast these devices with an eye to future directions.</p>
<p>The miniconf will feature two talks on the processing of incoming network packets; proper received-packet processing is critical to networking performance on modern multi-core/multi-thread/multi-interrupt hardware.  By looking at this problem from two different points of view, we hope some synergy will happen in this area.</p>
<p>The first performance talk is &#8220;Receive Packet Steering: A Software Solution to Scaling the Network Receive Path&#8221; by Tom Herbert.  Tom notes that networking receive scalability is often limited by the single receive queue provided by older network interface controllers (NICs).  This situation motivates some way of introducing parallelism in the receive path in spite of the single receive queue.  If additional parallelism could be introduced into the single-queue receive path, there would be a valuable opportunity to increase performance on these older controllers.</p>
<p>The second performance oriented talk is on the new threaded interrupts &#8220;Threaded Network Device Interrupts&#8221; by Steven Rostedt.  Steven argues that the use of threaded interrupts will not only simplify the networking code, but also increase network throughput.  Given that some prominent developers in the networking community have been expressed skepticism about the value of threaded interrupts, we can expect some spirited discussion, and perhaps some modifications to threaded interrupts, to networking, or both.</p></span>
  
  

  <h3 class='track block track-13'><a href="tracks/13">Real Time</a></h3>
  <span class="description"><p>This fall will mark the fifth anniversary of the -rt patchset. This patchset provides aggressive levels of real-time response and has seen significant production use. Many -rt components have been accepted into mainline, including timekeeping, futex priority inheritance, preemptable <span class="caps">RCU</span>, and much else besides. Nevertheless, the -rt patchset still includes a not-inconsiderable quantity of code, leading to the question of how it might best be fully merged.</p>
<p>We are fortunate to have Nivedita Singhvi, who is IBM&#8217;s real-time-Linux architect, and who has also worked on virtualization and networking, as the runner for the &#8220;Real Time&#8221; microconference. Nivedita has put together an excellent set of topics to help shed some light on the -rt merge question.</p>
<p>Nivedita&#8217;s first topic is &#8220;The State of preempt-rt&#8221; by Thomas Gleixner, who has co-maintained the -rt patchset for much of its existence. Thomas will outline what still remains in the out-of-tree -rt patchset and what changes are required in order to merge it. Perhaps the final merge is close at hand? He will also provide an overview of his current development work, primarily advances in threaded interrupt handlers.</p>
<p>For her second topic, Nivedita selected &#8220;Running Without Systems Management Interrupts&#8221; by Keith Mannthey. Systems management interrupts (SMIs) are used by x86 systems to handle exceptional conditions, such as correctable memory errors or thermal management. Unfortunately, SMIs can extend for many tens of microseconds or even many milliseconds, and some implementations use SMIs to periodically poll for exceptional conditions, which makes it impossible to meet aggressive real-time scheduling deadlines. Keith will therefore discuss what is required, both in the kernel and in userspace, to eliminate non-fatal SMIs, thus enabling aggressive real-time response.</p>
<p>The third topic is &#8220;Real-Time Benchmarking &#8211; an Open, Cross-Language Micro-Benchmark Suite&#8221; by Vernon Mauery. Linux&#8217;s real-time response has improved impressively over the past decade, but retaining this response will require test suites that developers can easily run. Furthermore, it will be necessary to compare different platforms and different operating systems on an equal footing. Vernon proposes a benchmark suite to help achieve this goal.</p>
<p>The fourth and final topic is &#8220;Networking and Real Time&#8221; by Nivedita Singhvi. The days when real-time systems were isolated computers controlling a process seem to be coming to a close: today&#8217;s real-time systems must communicate with each other as well as with non-real-time systems. In some cases, large volumes of data must be sent over multiple connections, which means that attention must be paid to both the throughput and the latency of Linux&#8217;s networking stack. Nivedita will discuss the key latency and throughput bottlenecks and discuss possible solutions.</p></span>
  
  

  <h3 class='track block track-2'><a href="tracks/2">Security</a></h3>
  <span class="description"><p>A few of us remember not needing to lock the door as kids, as well as the anonymous/guest logins on the <span class="caps">ARPANET</span> and early Internet. Needless to say, those days are gone forever. Security is now critically important, even for the most obscure computer systems.</p>
<p>The Linux Plumbers Conference is fortunate to have James Morris and Paul Moore as runners for the Security microconference. James and Paul are quite prominent in the Linux security community, James in his role as Linux kernel security subsystem maintainer, and Paul in a number of roles, including leader of the NetLabel network-security subsystem. The Security microconference is a double-length microconference this year, as is fitting given the importance of security in today&#8217;s world of spammers, botnet controllers, and many other black-hat threats. In the interest of brevity, only four of the seven selections are highlighted below, but please rest assured that the remainder are every bit as interesting and important.</p>
<p>The first two topics recognize the importance of usability, something that has all too often been neglected in the security field. After all, even the best security mechanisms are of no use if users prefer to disable them. To demonstrate how much progress SELinux has made in recent years, Caleb Case will be showing a demo of SELinux on Ubuntu while Dan Walsh showcases a bit of SELinux in Fedora that anyone can use, namely application sandboxes. These demos are important steps towards the goal of effective security measures designed for the typical Linux user. We hope that numerous Linux users will attend these demos so as to promote a vigorous and illuminating discussion.</p>
<p>The next topic takes a look at the Simplified Mandatory Access Control Kernel (Smack) through the eyes of it&#8217;s author, Casey Schaufler. Casey presents a case study in Smack configuration by showing how Smack can be used to provide additional security for a well-known commercial database server. This should help both developers and users understand how to apply these new advanced security mechanisms to their own systems and applications, and will hopefully also start a productive collaboration between developers at all levels of the <span class="caps">FOSS</span> stack.</p>
<p>The fourth and final topic, at least for the moment, is the Linux Kernel Crypto <span class="caps">API</span>, presented by Herbert Xu. Given that Moore&#8217;s Law is still providing transistors, but is no longer increasing clock frequencies, we can expect more hardware offload engines, including hardware encryption. The Linux Kernel Crypto <span class="caps">API</span> is critically important for timely support of such hardware. In addition, Herbert will describe user-space APIs and how this <span class="caps">API</span> might be generalized beyond cryptographic algorithms. Given the need to change cryptographic algorithms as they weaken, either due to newly discovered attacks or due to the inexorable increase in available computing power, we can expect the Linux Kernel Crypto <span class="caps">API</span> to have a key role to play in the security arena &#8212; and to require continued refinement as security requirements change over time.</p></span>
  
  

  <h3 class='track block track-7'><a href="tracks/7">Storage</a></h3>
  <span class="description"><p>Linux&#8217;s storage system contains many aspects, from filesystems through the <span class="caps">VFS</span> layer to low-level device handling. Many of these aspects have very active communities and therefore are the subject of much productive discussion. Nevertheless, some aspects of storage do not always get the attention that they require. Here to help us give these aspects the love and attention that they deserve is Matthew Wilcox, who has been a Linux kernel hacker for more than ten years, most recently with Intel&#8217;s Open Source Technology Centre.</p>
<p>The first topic is &#8220;Evaluating Linux storage APIs for use in <span class="caps">QEMU</span>/<span class="caps">KVM</span>&#8221; by Anthony Liguori. Anthony&#8217;s work with the virtio-pci Linux kernel module (which provides virtual I/O support for guest operating systems running on <span class="caps">QEMU</span>/<span class="caps">KVM</span>) pointed up some shortcomings of the current userspace storage APIs used for <span class="caps">QEMU</span> and <span class="caps">KVM</span>. Cleaning up this <span class="caps">API</span> would be very helpful, both from the viewpoint of simplicity and from the viewpoint of more-efficient virtualization. We hope that this discussion will help Linux further burnish its &#8220;green&#8221; credentials, but with full performance and reduced complexity.</p>
<p>The second topic is &#8220;Linux Data De-Duplication&#8221; by Mingming Cao. At first glance, the large and growing capacities of disk drives would make any de-duplication a waste of <span class="caps">CPU</span> time. However, solid-state disks are not quite so large, and de-duplication can reduce the amount of memory required for buffer cache, especially when running multiple similar operating systems on the same system. Mingming will describe different approaches to de-duplication, including some that have been discussed within the btrfs community. Please bring your ideas and experiences!</p>
<p>The third and final topic is &#8220;Locking issues on Clustering File Systems&#8221; by Coly Li. In contrast to the first two topics, which involve pushing more workloads onto a single system, Coly is working on clustering many systems together to work on a single problem. Clusters require special coordination, which is often provided by a distributed lock manager (<span class="caps">DLM</span>, as in the fs/dlm facility in Linux) and a cluster filesystem (such as OCFS2). These coordination facilities bring their own costs, including lock-mastering expense, lock communication cost, <span class="caps">DLM</span> compatibility between fs/dlm and OCFS2, deadlock detection, and so on.</p></span>
  
  

  <h3 class='track block track-3'><a href="tracks/3">X Window System</a></h3>
  <span class="description"><p>The X Window System has seen great change over the past year with low-level device handling moving from userspace to the kernel. Now that this important but low-level infrastructure is in place, it is time to look at a higher level of the Linux graphics stack.</p>
<p>And who better to bring us to a higher level than Keith Packard, project lead for the freedesktop.org Xserver and for the official reference implementation of the X Window System? Keith has put together a can&#8217;t-miss lineup that covers three important topics, each with a pair of potential solutions and a moderated Q&amp;A session.</p>
<p>The first topic is the &#8220;Video <span class="caps">API</span> Deathmatch: <span class="caps">VDPAU</span> vs. <span class="caps">VAAPI</span>&#8221;, where &#8220;<span class="caps">VDPAU</span>&#8221; is NVIDIA&#8217;s Video Decode and Presentation <span class="caps">API</span> for Unix, and &#8220;<span class="caps">VAAPI</span>&#8221; is the Video Acceleration <span class="caps">API</span> led by Intel, and (not surprisingly) supported by recent Intel integrated graphics hardware, but also supported by recent S3 Graphics hardware. Stephen Warren will be putting on the gloves for <span class="caps">VDPAU</span> and Jonathan Bian will be defending VAAPI&#8217;s honor. Keith will then moderate the Q&amp;A session, with questions taken from any surviving members of the audience.</p>
<p>The second topic is a more placid discussion of compositing architecture, featuring &#8220;Wayland &#8211; A New Display Server for Linux&#8221; by Kristian Høgsberg and &#8220;Compositing, OpenGL, Double-Buffering, and Dragons&#8221; by Jesse Barnes. The reason we expect this discussion to be more placid is that Kristian asserts that Jesse&#8217;s work will always be relevant. On the other hand, Kristian also compares Jesse&#8217;s work to <span class="caps">FORTRAN</span>, so you be the judge. Kristian will show us how moving functionality (including fonts, OpenGL, Cairo 2D rendering, <span class="caps">GEM</span>, and kernel mode setting) into the kernel and libraries paves the way for small special-purpose display servers such as Wayland. Wayland promises to enable Linux GUIs to run efficiently on yet-smaller embedded devices. Jesse will show us how OpenGL and other pre-existing APIs are affected by a compositing environment. This discussion is critically important: although compositing promises to provide much-needed flexibility to system designers, we need compositing to work efficiently for all applications, while at the same time solving persistent problems with buffer tearing and memory usage.</p>
<p>The third and final topic is 2D acceleration on modern GPUs, with &#8220;The Battle for 2D Acceleration&#8221; by Chris Wilson and &#8220;2D X State Tracker for Gallium&#8221; by Jakob Bornecrantz. Chris will show us a direct-to-<span class="caps">DRM</span> implementation in Cairo, after which Jakob will present recent work in Gallium. Given that our current 2D architectures (<span class="caps">EXA</span>/<span class="caps">XAA</span>/<span class="caps">UXA</span>) all fail to provide credible acceleration for sophisticated 2D applications, a new direction is clearly needed. Perhaps Chris&#8217;s or Jakob&#8217;s work will show the way to a fully accelerated tesselator for these applications.</p>
<p>Our new Linux graphics architecture provides the infrastructure required for fantastic new systems, so please join us to work out video APIs, compositing, and 2D acceleration at this year&#8217;s Linux Plumbers Conference!</p></span>
  
  


<div>

<a href="proposals.1" class="cancelable">Back to proposals</a>
</div>


        </div><!-- content -->
      </div><!-- container -->

        <div id="primary" class="sidebar">
          <ul class="xoxo">
            
              <li id="login-as">
                <h3>Welcome</h3>
                <ul>
                  <li><a href="../../login">Login</a></li>
                  
                </ul>
              </li>
            

            <li id="subscribe-to">
              <h3>Subscribe to</h3>
              <ul>
                <li class="pre-bulletted"><a href="../../proposals.atom" class="feedable">Proposals feed</a></li>
                
              </ul>
            </li>

            
          </ul>
        </div><!-- #sidebar-1 -->

    <div id="footer">
    <a href="http://osuosl.org"><img border="0" src="../../../2009/style/osl-hosted.png" alt="OSL"/></a>
    </div>

  </div><!--wrapper -->

  

  <!-- arbitrary javascript from views -->
  <script type="text/javascript">
//<![CDATA[
window._token = '3de1ad592bd7309acf8c34d1703480c88bfb9b22'
//]]>
</script>
  <script type="text/javascript">
    
  </script>

  
    <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
      var pageTracker = _gat._getTracker("UA-168427-8");
      pageTracker._initData();
      pageTracker._trackPageview();
    </script>

    <script src="http://static.getclicky.com/79611.js" type="text/javascript"></script>
    <noscript><p><img alt="Clicky" width="1" height="1" src="http://static.getclicky.com/79611-db10.gif" /></p></noscript>
  
</body>
</html>
